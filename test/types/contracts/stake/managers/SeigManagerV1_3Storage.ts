/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface SeigManagerV1_3StorageInterface extends utils.Interface {
  functions: {
    "l2Registry()": FunctionFragment;
    "l2RewardPerUint()": FunctionFragment;
    "layer2Manager()": FunctionFragment;
    "layer2RewardInfo(address)": FunctionFragment;
    "layer2StartBlock()": FunctionFragment;
    "totalLayer2TVL()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "l2Registry"
      | "l2RewardPerUint"
      | "layer2Manager"
      | "layer2RewardInfo"
      | "layer2StartBlock"
      | "totalLayer2TVL"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "l2Registry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "l2RewardPerUint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "layer2Manager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "layer2RewardInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "layer2StartBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalLayer2TVL",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "l2Registry", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "l2RewardPerUint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "layer2Manager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "layer2RewardInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "layer2StartBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalLayer2TVL",
    data: BytesLike
  ): Result;

  events: {};
}

export interface SeigManagerV1_3Storage extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SeigManagerV1_3StorageInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    l2Registry(overrides?: CallOverrides): Promise<[string]>;

    l2RewardPerUint(overrides?: CallOverrides): Promise<[BigNumber]>;

    layer2Manager(overrides?: CallOverrides): Promise<[string]>;

    layer2RewardInfo(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { layer2Tvl: BigNumber; initialDebt: BigNumber }
    >;

    layer2StartBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalLayer2TVL(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  l2Registry(overrides?: CallOverrides): Promise<string>;

  l2RewardPerUint(overrides?: CallOverrides): Promise<BigNumber>;

  layer2Manager(overrides?: CallOverrides): Promise<string>;

  layer2RewardInfo(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { layer2Tvl: BigNumber; initialDebt: BigNumber }
  >;

  layer2StartBlock(overrides?: CallOverrides): Promise<BigNumber>;

  totalLayer2TVL(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    l2Registry(overrides?: CallOverrides): Promise<string>;

    l2RewardPerUint(overrides?: CallOverrides): Promise<BigNumber>;

    layer2Manager(overrides?: CallOverrides): Promise<string>;

    layer2RewardInfo(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { layer2Tvl: BigNumber; initialDebt: BigNumber }
    >;

    layer2StartBlock(overrides?: CallOverrides): Promise<BigNumber>;

    totalLayer2TVL(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    l2Registry(overrides?: CallOverrides): Promise<BigNumber>;

    l2RewardPerUint(overrides?: CallOverrides): Promise<BigNumber>;

    layer2Manager(overrides?: CallOverrides): Promise<BigNumber>;

    layer2RewardInfo(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    layer2StartBlock(overrides?: CallOverrides): Promise<BigNumber>;

    totalLayer2TVL(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    l2Registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    l2RewardPerUint(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    layer2Manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    layer2RewardInfo(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    layer2StartBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalLayer2TVL(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
