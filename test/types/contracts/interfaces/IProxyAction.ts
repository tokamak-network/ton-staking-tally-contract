/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface IProxyActionInterface extends utils.Interface {
  functions: {
    "getSelectorImplementation2(bytes4)": FunctionFragment;
    "implementation2(uint256)": FunctionFragment;
    "setAliveImplementation2(address,bool)": FunctionFragment;
    "setImplementation2(address,uint256,bool)": FunctionFragment;
    "setProxyPause(bool)": FunctionFragment;
    "setSelectorImplementations2(bytes4[],address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getSelectorImplementation2"
      | "implementation2"
      | "setAliveImplementation2"
      | "setImplementation2"
      | "setProxyPause"
      | "setSelectorImplementations2"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getSelectorImplementation2",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "implementation2",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setAliveImplementation2",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setImplementation2",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setProxyPause",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setSelectorImplementations2",
    values: [PromiseOrValue<BytesLike>[], PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getSelectorImplementation2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "implementation2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAliveImplementation2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setImplementation2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProxyPause",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSelectorImplementations2",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IProxyAction extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IProxyActionInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getSelectorImplementation2(
      _selector: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string] & { impl: string }>;

    implementation2(
      _index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    setAliveImplementation2(
      newImplementation: PromiseOrValue<string>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setImplementation2(
      newImplementation: PromiseOrValue<string>,
      _index: PromiseOrValue<BigNumberish>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setProxyPause(
      _pause: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setSelectorImplementations2(
      _selectors: PromiseOrValue<BytesLike>[],
      _imp: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getSelectorImplementation2(
    _selector: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  implementation2(
    _index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  setAliveImplementation2(
    newImplementation: PromiseOrValue<string>,
    _alive: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setImplementation2(
    newImplementation: PromiseOrValue<string>,
    _index: PromiseOrValue<BigNumberish>,
    _alive: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setProxyPause(
    _pause: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setSelectorImplementations2(
    _selectors: PromiseOrValue<BytesLike>[],
    _imp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getSelectorImplementation2(
      _selector: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    implementation2(
      _index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    setAliveImplementation2(
      newImplementation: PromiseOrValue<string>,
      _alive: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setImplementation2(
      newImplementation: PromiseOrValue<string>,
      _index: PromiseOrValue<BigNumberish>,
      _alive: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setProxyPause(
      _pause: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setSelectorImplementations2(
      _selectors: PromiseOrValue<BytesLike>[],
      _imp: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getSelectorImplementation2(
      _selector: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    implementation2(
      _index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAliveImplementation2(
      newImplementation: PromiseOrValue<string>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setImplementation2(
      newImplementation: PromiseOrValue<string>,
      _index: PromiseOrValue<BigNumberish>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setProxyPause(
      _pause: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setSelectorImplementations2(
      _selectors: PromiseOrValue<BytesLike>[],
      _imp: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getSelectorImplementation2(
      _selector: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    implementation2(
      _index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAliveImplementation2(
      newImplementation: PromiseOrValue<string>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setImplementation2(
      newImplementation: PromiseOrValue<string>,
      _index: PromiseOrValue<BigNumberish>,
      _alive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setProxyPause(
      _pause: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setSelectorImplementations2(
      _selectors: PromiseOrValue<BytesLike>[],
      _imp: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
