/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface L2RegistryStorageInterface extends utils.Interface {
  functions: {
    "l1Bridge(address)": FunctionFragment;
    "layer2Manager()": FunctionFragment;
    "portal(address)": FunctionFragment;
    "seigManager()": FunctionFragment;
    "systemConfigType(address)": FunctionFragment;
    "ton()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "l1Bridge"
      | "layer2Manager"
      | "portal"
      | "seigManager"
      | "systemConfigType"
      | "ton"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "l1Bridge",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "layer2Manager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "portal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "seigManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "systemConfigType",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "ton", values?: undefined): string;

  decodeFunctionResult(functionFragment: "l1Bridge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "layer2Manager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "portal", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "seigManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "systemConfigType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ton", data: BytesLike): Result;

  events: {};
}

export interface L2RegistryStorage extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: L2RegistryStorageInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    l1Bridge(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    layer2Manager(overrides?: CallOverrides): Promise<[string]>;

    portal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    seigManager(overrides?: CallOverrides): Promise<[string]>;

    systemConfigType(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    ton(overrides?: CallOverrides): Promise<[string]>;
  };

  l1Bridge(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  layer2Manager(overrides?: CallOverrides): Promise<string>;

  portal(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  seigManager(overrides?: CallOverrides): Promise<string>;

  systemConfigType(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number>;

  ton(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    l1Bridge(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    layer2Manager(overrides?: CallOverrides): Promise<string>;

    portal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    seigManager(overrides?: CallOverrides): Promise<string>;

    systemConfigType(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number>;

    ton(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    l1Bridge(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    layer2Manager(overrides?: CallOverrides): Promise<BigNumber>;

    portal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    seigManager(overrides?: CallOverrides): Promise<BigNumber>;

    systemConfigType(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ton(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    l1Bridge(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    layer2Manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    portal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    seigManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    systemConfigType(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ton(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
