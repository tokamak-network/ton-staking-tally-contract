/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface IL2RegisterInterface extends utils.Interface {
  functions: {
    "checkLayer2TVL(address)": FunctionFragment;
    "systemConfigType(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "checkLayer2TVL" | "systemConfigType"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "checkLayer2TVL",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "systemConfigType",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "checkLayer2TVL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "systemConfigType",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IL2Register extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IL2RegisterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    checkLayer2TVL(
      _systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean, BigNumber] & { result: boolean; amount: BigNumber }>;

    systemConfigType(
      systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number]>;
  };

  checkLayer2TVL(
    _systemConfig: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<[boolean, BigNumber] & { result: boolean; amount: BigNumber }>;

  systemConfigType(
    systemConfig: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number>;

  callStatic: {
    checkLayer2TVL(
      _systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean, BigNumber] & { result: boolean; amount: BigNumber }>;

    systemConfigType(
      systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number>;
  };

  filters: {};

  estimateGas: {
    checkLayer2TVL(
      _systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    systemConfigType(
      systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    checkLayer2TVL(
      _systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    systemConfigType(
      systemConfig: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
